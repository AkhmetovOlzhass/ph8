generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasksCreated Task[]     @relation("UserTasks")
  solutions    Solution[]
}

model Topic {
  id        String   @id @default(uuid())
  title     String
  slug      String   @unique
  parentId  String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks     Task[]
}

model Task {
  id        String   @id @default(uuid())
  title     String
  bodyMd    String
  difficulty Difficulty @default(EASY)
  status    TaskStatus @default(DRAFT)
  tags      String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  topicId   String
  topic     Topic     @relation(fields: [topicId], references: [id], onDelete: Cascade)

  authorId  String
  author    User      @relation("UserTasks", fields: [authorId], references: [id])

  solutions Solution[]
}

model Solution {
  id        String   @id @default(uuid())
  bodyMd    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  taskId    String
  task      Task     @relation(fields: [taskId], references: [id])

  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
  EXTREME
}

enum TaskStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
